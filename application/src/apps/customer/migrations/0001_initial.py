# Generated by Django 2.2 on 2020-04-04 13:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        ('package', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('avatar', models.FileField(upload_to='customer/avatar/%Y/%m/%d/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now=True)),
                ('expired', models.DateTimeField(default=None, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='package.Package')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGroupPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.CustomerGroup')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='package.Package')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGroupMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.CustomerGroup')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGroupInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=300)),
                ('token', models.CharField(max_length=32)),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('accepted', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.CustomerGroup')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGroupAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.CustomerGroup')),
            ],
        ),
        migrations.AddField(
            model_name='customergroup',
            name='admins',
            field=models.ManyToManyField(related_name='group_admins', through='customer.CustomerGroupAdmin', to='customer.Customer'),
        ),
        migrations.AddField(
            model_name='customergroup',
            name='members',
            field=models.ManyToManyField(related_name='group_members', through='customer.CustomerGroupMember', to='customer.Customer'),
        ),
        migrations.AddField(
            model_name='customergroup',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='customer.Customer'),
        ),
        migrations.AddField(
            model_name='customergroup',
            name='packages',
            field=models.ManyToManyField(through='customer.CustomerGroupPackage', to='package.Package'),
        ),
        migrations.CreateModel(
            name='CustomerCompanyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCompanyAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='admin_companies',
            field=models.ManyToManyField(related_name='admin_companies', through='customer.CustomerCompanyAdmin', to='company.Company'),
        ),
        migrations.AddField(
            model_name='customer',
            name='admin_groups',
            field=models.ManyToManyField(related_name='admin_groups', through='customer.CustomerGroupAdmin', to='customer.CustomerGroup'),
        ),
        migrations.AddField(
            model_name='customer',
            name='invite_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_invite', to='company.CompanyInviteCustomer'),
        ),
        migrations.AddField(
            model_name='customer',
            name='member_companies',
            field=models.ManyToManyField(related_name='member_companies', through='customer.CustomerCompanyMember', to='company.Company'),
        ),
        migrations.AddField(
            model_name='customer',
            name='member_company_groups',
            field=models.ManyToManyField(related_name='member_company_groups', through='company.CompanyPackageGroupMember', to='company.CompanyPackageGroup'),
        ),
        migrations.AddField(
            model_name='customer',
            name='member_groups',
            field=models.ManyToManyField(related_name='member_groups', through='customer.CustomerGroupMember', to='customer.CustomerGroup'),
        ),
        migrations.AddField(
            model_name='customer',
            name='packages',
            field=models.ManyToManyField(through='customer.CustomerPackage', to='package.Package'),
        ),
    ]
